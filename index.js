function kanto_server_install(){db.query("DROP TABLE games, maps, users;",function(e,i){e&&console.log(e.toString()),console.log("Successfully uninstalled Kanto."),console.log("Running Kanto installation.."),db.query("CREATE TABLE games (id SERIAL PRIMARY KEY, name TEXT, game_id TEXT, author_id BIGINT, game_data TEXT, featured BOOL DEFAULT 'f');",function(e,i){e?console.log(e.toString()):fs.readdir("templates/games/",(e,i)=>{i.forEach(e=>{let t=JSON.parse(fs.readFileSync("templates/games/"+e,"utf8"));e=generate_game_id();db.query("INSERT INTO games (name, game_id, game_data, featured) values ($1, $2, $3, $4);",[t.meta.name,e,JSON.stringify(t),"t"],function(e,i){console.log("Inserted game:",t.meta.name),e&&console.log(e.toString())})})})}),db.query("CREATE TABLE users (id SERIAL PRIMARY KEY, username VARCHAR ( 50 ) UNIQUE NOT NULL, password VARCHAR ( 50 ) NOT NULL, email VARCHAR ( 255 ) UNIQUE NOT NULL, created_on TIMESTAMP NOT NULL, last_login TIMESTAMP );",function(e,i){e&&console.log(e.toString())}),db.query("CREATE TABLE maps (id SERIAL PRIMARY KEY, name TEXT, data TEXT);",function(e,i){e?console.log(e.toString()):fs.readdir("templates/maps/",(e,i)=>{i.forEach(e=>{e=JSON.parse(fs.readFileSync("templates/maps/"+e,"utf8"));db.query("INSERT INTO maps (name, data) values ($1, $2);",[e.name,JSON.stringify(e)],function(e,i){e&&console.log(e.toString())}),console.log("Inserted map:",e.name)})})})})}function generate_game_id(i=11){var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_-";let o="";for(let e=0;e<i;e++)o+=t.charAt(Math.floor(Math.random()*t.length));return o}function find_lobby_index(t){let o=null;return lobbies.forEach((e,i)=>{e.id==t&&(o=i)}),o}function find_trainer_index(e,t){let o=null;return lobbies[e]&&lobbies[e].trainers.forEach((e,i)=>{t==e.socket_id&&(o=i)}),o}function requireHTTPS(e,i,t){if(!e.secure&&"https"!==e.get("x-forwarded-proto")&&"development"!==process.env.NODE_ENV)return i.redirect("https://"+e.get("host")+e.url);t()}items=[{name:"POKÃ© BALL",type:"Ball"},{name:"GREAT BALL",type:"Ball"},{name:"POTION",type:"Restore"},{name:"SUPER POTION",type:"Restore"},{name:"ANTIDOTE",type:"Status"},{name:"BICYCLE",type:"Special"}];const express=require("express"),ejs=require("ejs"),app=express(),server=require("http").Server(app),path=require("path"),bodyParser=require("body-parser"),fs=require("fs"),Server=require("socket.io")["Server"],io=new Server(server),Client=require("pg")["Client"],db=new Client({connectionString:process.env.DATABASE_URL}),lobbies=[];app.set("view engine","ejs"),app.use(requireHTTPS),app.use(express.json({limit:"50mb"})),app.use("/assets",express.static(path.join(__dirname,"assets"))),app.use("/dist",express.static(path.join(__dirname,"dist"))),db.connect(),server.listen(process.env.PORT||8e3),app.get("/",function(e,o){db.query("SELECT * FROM games WHERE featured=true ORDER BY name ASC;",function(e,i){if(e)console.log(e.toString());else{let t=i.rows;db.query("SELECT * FROM games WHERE featured=false ORDER BY name ASC;",function(e,i){e?console.log(e.toString()):(e=i.rows,o.render("home",{featured_games:t,user_games:e}))})}})}),app.get("/play",(e,i)=>{e=e.header("x-forwarded-for")||e.connection.remoteAddress;console.log("Connection attempt from "+e+" accepted."),i.render("play")}),app.get("/create",(e,i)=>{e=e.header("x-forwarded-for")||e.connection.remoteAddress;console.log("Connection attempt from "+e+" accepted."),i.render("create")}),app.get("/reset",(e,i)=>{kanto_server_install(),i.send("Success")}),app.get("/games",(e,t)=>{e.header("x-forwarded-for")||e.connection.remoteAddress;db.query("SELECT * FROM games;",function(e,i){e?console.log(e.toString()):t.json(i.rows)})}),app.get("/templates/games",(e,o)=>{fs.readdir("templates/games/",(e,i)=>{let t=[];i.forEach(e=>{t.push(JSON.parse(fs.readFileSync("templates/games/"+e,"utf8")))}),o.json(t)})}),app.get("/templates/maps",(e,o)=>{fs.readdir("templates/maps/",(e,i)=>{let t=[];i.forEach(e=>{t.push(JSON.parse(fs.readFileSync("templates/maps/"+e,"utf8")))}),o.json(t)})}),app.get("/maps",(e,t)=>{e.header("x-forwarded-for")||e.connection.remoteAddress;db.query("SELECT * FROM maps;",function(e,i){e?console.log(e.toString()):t.json(i.rows)})}),app.post("/game",(e,t)=>{e=e.body.game;e?db.query("SELECT * FROM games WHERE game_id=$1;",[e],function(e,i){e?console.log(e.toString()):0<i.rows.length?t.json(i.rows[0].game_data):db.query("SELECT * FROM games WHERE name=$1;",["Pallet Town"],function(e,i){e&&console.log(e.toString()),t.json(i.rows[0].game_data)})}):db.query("SELECT * FROM games WHERE name=$1;",["Pallet Town"],function(e,i){e&&console.log(e.toString()),t.json(i.rows[0])})}),app.post("/upload",(t,e)=>{var i=t.header("x-forwarded-for")||t.connection.remoteAddress;console.log("Upload attempt from "+i+" accepted.");let o=null;t.body.meta.game_id&&(o=t.body.meta.game_id),console.log(o,t.body),o?db.query("SELECT * FROM games WHERE game_id=$1;",[o],function(e,i){e?console.log(e.toString()):0<i.rows.length&&db.query("UPDATE games SET game_data=$2 WHERE game_id=$1;",[o,t.body],function(e,i){e&&console.log(e.toString())})}):(o=generate_game_id(),t.body.meta.game_id=o,db.query("INSERT INTO games (name, game_id, game_data) values ($1, $2, $3);",[t.body.meta.name,o,t.body],function(e,i){e&&console.log(e.toString())})),e.json({success:!0,game_id:o})}),io.on("connection",s=>{console.log("New socket: ",s.id),s.on("join_lobby",t=>{var e=new Trainer(s.id,t.trainer.position,t.trainer.spritesheet_id);let o=null;lobbies.forEach((e,i)=>{t.lobby_id==e.id&&(o=i)}),null===o?lobbies.push(new Lobby(t.lobby_id,t.game_id,[e])):(s.emit("create_current_trainers",lobbies[o].trainers),lobbies[o].trainers.push(e)),s.join(t.lobby_id),s.to(t.lobby_id).emit("trainer_joined",{name:"BLUE",position:e.position,spritesheet_id:t.trainer.spritesheet_id,socket_id:s.id});find_lobby_index(t.lobby_id)}),s.on("position_update",e=>{var i=find_lobby_index(e.lobby_id),t=find_trainer_index(i,s.id);null!==i&&(lobbies[i].trainers[t].position=e.trainer.position,s.to(lobbies[i].id).emit("trainer_moved",{socket_id:lobbies[i].trainers[t].socket_id,position:lobbies[i].trainers[t].position,exiting:e.trainer.exiting}))}),s.on("facing_update",e=>{var i=find_lobby_index(e.lobby_id),t=find_trainer_index(i,s.id);null!==i&&(lobbies[i].trainers[t].position.f=e.f,s.to(lobbies[i].id).emit("trainer_faced",{socket_id:lobbies[i].trainers[t].socket_id,f:lobbies[i].trainers[t].position.f}))}),s.on("speed_update",e=>{var i=find_lobby_index(e.lobby_id),t=find_trainer_index(i,s.id);null!==i&&(lobbies[i].trainers[t].speed=e.s,s.to(lobbies[i].id).emit("trainer_speed",{socket_id:lobbies[i].trainers[t].socket_id,s:lobbies[i].trainers[t].speed}))}),s.on("spritesheet_update",e=>{console.log("spritesheet_update",e);var i=find_lobby_index(e.lobby_id),t=find_trainer_index(i,s.id);null!==i&&(lobbies[i].trainers[t].spritesheet_id=e.spritesheet_id,s.to(lobbies[i].id).emit("trainer_sprite",{socket_id:lobbies[i].trainers[t].socket_id,spritesheet_id:lobbies[i].trainers[t].spritesheet_id}))}),s.on("player_encounter",e=>{console.log("player_encounter",e);var o=find_lobby_index(e.lobby_id),e=find_trainer_index(o,s.id);if(null!==o){let i=lobbies[o].trainers[e],t=[];switch(i.position.f){case 0:lobbies[o].trainers.forEach(e=>{e.position.map==i.position.map&&e.position.x==i.position.x&&e.position.y<i.position.y&&i.position.y-e.position.y<=5&&t.push(e)});break;case 1:lobbies[o].trainers.forEach(e=>{e.position.map==i.position.map&&e.position.x>i.position.x&&e.position.y==i.position.y&&e.position.x-i.position.x<=5&&t.push(e)});break;case 2:lobbies[o].trainers.forEach(e=>{e.position.map==i.position.map&&e.position.x==i.position.x&&e.position.y>i.position.y&&e.position.y-i.position.y<=5&&t.push(e)});break;case 3:lobbies[o].trainers.forEach(e=>{e.position.map==i.position.map&&e.position.x<i.position.x&&e.position.y==i.position.y&&i.position.x-e.position.x<=5&&t.push(e)})}0<t.length&&(io.to(i.socket_id).emit("player_encounter",{socket_id:t[0].socket_id}),io.to(t[0].socket_id).emit("player_encountered",{socket_id:i.socket_id}))}}),s.on("map_server_sync",i=>{console.log("map_server_sync",i);var e=find_lobby_index(i.lobby_id);let t=[];lobbies[e]&&(lobbies[e].npcs.forEach(e=>{e.position.map==i.map&&t.push({uid:e.uid,position:e.position})}),s.emit("map_server_sync",{npcs:t}))}),s.on("disconnecting",e=>{let i=null;var t,o;s.rooms.forEach(e=>{e!==s.id&&(i=e)}),i&&(o=find_trainer_index(t=find_lobby_index(i),s.id),lobbies[t].trainers.splice(o,1)),io.to(i).emit("trainer_disconnected",s.id)})});class Lobby{constructor(e=null,i=null,t=[]){this.id=e,this.game_id=i,this.trainers=t,this.game=!1,this.import_data=this.retrieve_game(i),this.loaded=!1,this.import_data.then(e=>this.generate_game(e),e=>console.log("Error importing game:",i))}async retrieve_game(e){return console.log("Retrieving game..",e),(await db.query("SELECT * FROM games WHERE game_id=$1;",[e])).rows[0]}generate_game(e){this.game=JSON.parse(e.game_data),this.npcs=[],this.items=[],this.game.maps.forEach((e,i)=>{e.id=i,this.build_npcs(e)}),this.loaded=!0}build_npcs(t){let o=0;for(let i=0;i<t.height;i++)for(let e=0;e<t.width;e++){var s=e+t.width*i,s=t.atts[s];5==s.type&&(this.npcs.push(new Npc({map:t.id,x:e,y:i},s.facing,s.movement_state,t,this.id,o)),o++)}}close(){}}class Npc{constructor(e={map:0,x:0,y:0,f:0},i="South",t="Active",o=null,s=0,n=0){this.position=e,this.facing=i,this.map=o,this.movement_state=t,this.index=n,this.lobby_id=s,this.initial_properties={position:e,facing:i},this.uid=`M${this.position.map}X${this.position.x}Y`+this.position.y,"Active"==this.movement_state&&(this.wander_interval=setInterval(this.wander,1e3,this))}place(e,i){this.position.index=this.position.x+this.map.width*this.position.y,this.position.tile=map.atts[e+this.map.width*i]}position_update(){this.position.index=this.position.x+this.map.width*this.position.y,this.position.tile=this.map.tiles[this.position.index],this.position.att=this.map.atts[this.position.index]}move(e){let i={x:this.position.x,y:this.position.y};switch(e){case"East":i.x++;break;case"West":i.x--;break;case"North":i.y--;break;case"South":i.y++}if(!this.collision_check(i.x,i.y)){switch(this.moving=!0,this.current_move_ticker=0,e){case"North":this.facing="North",this.position.y--,this.position.f=0;break;case"East":this.facing="East",this.position.x++,this.position.f=1;break;case"South":this.facing="South",this.position.y++,this.position.f=2;break;case"West":this.facing="West",this.position.x--,this.position.f=3}io.to(this.lobby_id).emit("npc_moved",{uid:this.uid,position:this.position,moving:e})}}wander(e){var i=Math.floor(5*Math.random())+1,t=Math.floor(3*Math.random())+1;1==i&&e.move(["North","South","East","West"][t])}collision_check(i,t){let e=find_lobby_index(this.lobby_id),o=!1;if(i<0||i>=this.map.width)return!0;if(t<0||t>=this.map.height)return!0;switch(this.map.atts[i+this.map.width*t].type){case 1:case 3:case 6:case 7:return!0}return lobbies[e].trainers.forEach(e=>{i==e.position.x&&t==e.position.y&&(o=!0)}),lobbies[e].npcs.forEach(e=>{this.position.map==e.position.map&&i==e.position.x&&t==e.position.y&&(o=!0)}),o}}class Trainer{constructor(e=null,i={map:1,x:5,y:5},t=0){this.socket_id=e,this.position=i,this.spritesheet_id=t,this.facing="South"}}